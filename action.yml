name: "Action template entry"
description: "Action template entry"  

runs:
  using: "composite"
  
  steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up GitHub CLI
        shell: bash
        run: |
          gh --version  # Check GitHub CLI version  
        
      - name: Install jq and yq
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          sudo curl -sL https://github.com/mikefarah/yq/releases/download/v4.13.2/yq_linux_amd64 -o /usr/bin/yq
          sudo chmod +x /usr/bin/yq
          
      - name: Read pipelineconfig
        shell: bash
        id: read_config
        run: |
          pipeline_config_path="${{ github.workspace }}/pipelineconfig.yml"

          # Use a tool like yq to parse the YAML file (install yq if needed)
          pipelineType=$(yq eval '.pipelineType' "${pipeline_config_path}")
          buildTool=$(yq eval '.buildTool' "${pipeline_config_path}")
          concatsValue="${pipelineType}${buildTool}"
          echo "concatsValue: $concatsValue"
          echo "PipelineType: $pipelineType"
          echo "BuildTool: $buildTool"
          
          echo "concatsValue=${concatsValue}" >> GITHUB_OUTPUT
          echo "pipelineType=$pipelineType" >> $GITHUB_OUTPUT
          echo "buildTool=$buildTool" >> $GITHUB_OUTPUT
          echo "concatsValue=${concatsValue}" >> GITHUB_ENV
          echo "pipelineType=$pipelineType" >> $GITHUB_ENV
          echo "buildTool=$buildTool" >> $GITHUB_ENV  
          
      - name: Set up JDK 11
        if: ${{ steps.read_config.outputs.buildTool == 'java' }}
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build
        shell: bash
        env:
          buildTool: ${{ steps.read_config.outputs.buildTool }}
        run: |
             echo "Build tool is $buildTool"
             if [ "$buildTool" == "maven" ]; then
               mvn -B package --file pom.xml
             elif [ "$buildTool" == "ant" ]; then
               ant -f **/**/**/build.xml build
             elif [ "$buildTool" == "gradle" ]; then
               gradle -b **/**/**/build.gradle build
             else
               echo "Unsupported build tool: $buildTool"
               exit 1  # Exit with an error code for unsupported build tools
             fi
      - name: Stash the artifact
        shell: bash
        run: |
            cd **/**/
